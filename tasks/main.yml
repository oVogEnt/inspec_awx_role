---
- name: Set current role path
  ansible.builtin.set_fact:
    current_role_path: '{{ role_path }}'

- name: Ensure SSH directory exists
  ansible.builtin.file:
    path: /home/ansible/.ssh
    state: directory
    mode: '0700'
  delegate_to: localhost

- name: Write SSH private key to file
  ansible.builtin.copy:
    content: "{{ ssh_private_key }}"
    dest: /home/ansible/.ssh/id_rsa
    mode: '0600'
  delegate_to: localhost

- name: Write SSH public key to file
  ansible.builtin.copy:
    content: "{{ ssh_public_key }}"
    dest: /home/ansible/.ssh/id_rsa.pub
    mode: '0644'
  delegate_to: localhost

- name: Add SSH key to agent
  ansible.builtin.shell: |
    eval "$(ssh-agent -s)"
    ssh-add /home/ansible/.ssh/id_rsa
  delegate_to: localhost

- name: Set InSpec attributes
  when: inspec_vars_list is defined
  block:
    - ansible.builtin.set_fact:
        inspec_attr_path: /tmp/inspec-attr-{{ inventory_hostname }}-{{ ansible_date_time.iso8601_basic }}.yml
        inspec_attr_list: "{% for v in inspec_vars_list %}{{v.name}} : {{v.value}}\n{% endfor %}"

    - name: Dump vars to file
      ansible.builtin.copy:
        content: '{{ inspec_attr_list }}'
        dest: '{{ inspec_attr_path }}'
      changed_when: false
      delegate_to: localhost

- ansible.builtin.set_fact:
    inspec_attr_arg: "{{ '--input-file %s'|format(inspec_attr_path) if inspec_vars_list is defined else '' }}"

- name: Set InSpec profiles path
  ansible.builtin.set_fact:
    inspec_profile_dir: '{{ current_role_path }}/inspec-profile'
  when: inspec_profile_dir is undefined

- name: Run InSpec tests
  ansible.builtin.shell: |
    eval "$(ssh-agent -s)"
    ssh-add /home/ansible/.ssh/id_rsa
    inspec exec {{ inspec_profile_dir }} \
    -t ssh://{{ ansible_user }}@{{ ansible_host }} \
    --key-files /home/ansible/.ssh/id_rsa --reporter yaml \
    {{ inspec_attr_arg }} > /tmp/inspec_output.txt 2>&1
  delegate_to: localhost
  changed_when: false
  register: inspec_out
  ignore_errors: yes
  environment:
    CHEF_LICENSE: "{{ chef_license }}"
    CHEF_LICENSE_KEY: "{{ chef_license_key }}"

- name: Read InSpec output
  ansible.builtin.command:
    cmd: cat /tmp/inspec_output.txt
  delegate_to: localhost
  register: inspec_output_content

- name: Copy InSpec output to target host
  ansible.builtin.copy:
    content: "{{ inspec_output_content.stdout }}"
    dest: /tmp/inspec_output_{{ inventory_hostname }}.txt

- name: Copy InSpec output parsing script
  ansible.builtin.copy:
    src: files/parse_inspec_output.py
    dest: /tmp/parse_inspec_output.py
    mode: '0755'

- name: Run InSpec output parsing script
  ansible.builtin.command:
    cmd: python3 /tmp/parse_inspec_output.py /tmp/inspec_output_{{ inventory_hostname }}.txt
  register: parse_result
  changed_when: false

- name: Display InSpec summary report
  ansible.builtin.debug:
    msg: "{{ parse_result.stdout }}"

- name: Copy InSpec summary to target host
  ansible.builtin.copy:
    content: "{{ parse_result.stdout }}"
    dest: /tmp/inspec_summary_{{ inventory_hostname }}.txt

- name: Cleanup temporary InSpec files on local
  ansible.builtin.file:
    path: /tmp/inspec_output.txt
    state: absent
  delegate_to: localhost
